# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    - run: npm install
    - run: npm run build --prod

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
      
    - name: setting Tag
      id: date
      run: echo "::set-output name=date::$(date +%s)"
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: githubaction
        IMAGE_TAG: ${{ steps.date.outputs.date }}
      run: |
        echo $ECR_REGISTRY
        echo $ECR_REPOSITORY
        echo $IMAGE_TAG
        docker build -t angular .
        docker tag angular:latest 012820943770.dkr.ecr.eu-north-1.amazonaws.com/githubaction:$IMAGE_TAG
        docker push 012820943770.dkr.ecr.eu-north-1.amazonaws.com/githubaction:$IMAGE_TAG
